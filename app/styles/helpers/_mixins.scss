@mixin size($width: 100px, $height: $width) {
  width: $width;
  height: $height;
}

@mixin absoluteCenter($direction: 'left', $position: absolute) {
  position: $position;

  @if ($direction=='left') {
    left: 50%;
    transform: translateX(-50%);
  }

  @if ($direction=='top') {
    top: 50%;
    transform: translateY(-50%);
  }

  @if ($direction=='both') {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}

@mixin absoluteFull {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

@mixin maxWidth($breakpoint) {
  @media screen and (max-width: $breakpoint) {
    @content;
  }
}

@mixin minWidth($breakpoint) {
  @media screen and (min-width: $breakpoint) {
    @content;
  }
}

@mixin flexBox($align-items: stretch, $justify-content: flex-start, $direction: row, $flex: flex, $wrap: nowrap) {
  display: $flex;
  align-items: $align-items;
  justify-content: $justify-content;
  flex-direction: $direction;
  flex-wrap: $wrap;
}

@mixin hideScroll() {
  -ms-overflow-style: none;
  scrollbar-width: none;

  &::-webkit-scrollbar {
    display: none;
  }
}

@mixin textClamp($rows: 1, $size: 100%) {
  display: -webkit-box;
  -webkit-line-clamp: $rows;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  width: $size;
  max-width: $size;
  white-space: pre-wrap;
  word-break: break-word;
}

@mixin hoverEffect($itemClass, $contentClass, $transform: 'true') {
  #{$itemClass} {
    transition: all .25s ease-in;
    position: relative;
    z-index: 1;
    will-change: transform;

    #{$contentClass} {
      @include absoluteFull();
      @include flexBox(center, center, column);
      opacity: 0;
      visibility: hidden;
      transition: all .25s linear;
      background: linear-gradient(to bottom,
          rgba($primary-color, 0.8),
          rgba($secondary-color, 0.8));
      z-index: 2;
    }

    @if $transform=='true' {
      &::after {
        will-change: transform;
        content: '';
        @include absoluteFull();
        background-color: $third-color;
        transition: all .25s ease-in;
        z-index: -1;
      }
    }


    &:hover {

      #{$contentClass} {
        opacity: 1;
        visibility: visible;
      }

      @if $transform=='true' {
        transform: translate(-1rem, -1rem);

        &::after {
          transform: translate(1rem, 1rem);
        }
      }
    }
  }

}

@mixin touchSlider($width: 80%, $padding: 1rem) {
  margin-left: unset;
  overflow-x: auto;
  padding: $padding;
  @include hideScroll();
  scroll-snap-type: x mandatory;
  scroll-snap-stop: always;

  &>* {
    min-width: $width;
    scroll-snap-align: start;
  }
}